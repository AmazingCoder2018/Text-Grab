<n:RecorderWindow
    x:Class="Text_Grab.Windows.NewRecorder"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:Text_Grab.Util.Converters"
    xmlns:n="clr-namespace:Text_Grab.Controls"
    xmlns:u="clr-namespace:Text_Grab.Util"
    x:Name="RecorderWindow"
    Title="Text Grab"
    MinWidth="220"
    Activated="Window_Activated"
    AllowsTransparency="False"
    Closing="Window_Closing"
    FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}"
    Icon="../Resources/Logo.ico"
    KeyDown="Window_KeyDown"
    Loaded="Window_Loaded"
    ResizeMode="CanMinimize"
    SizeToContent="WidthAndHeight"
    SnapsToDevicePixels="True"
    StateChanged="Window_StateChanged"
    Topmost="True"
    UseLayoutRounding="True"
    WindowStartupLocation="Manual"
    WindowStyle="None">

    <n:RecorderWindow.TaskbarItemInfo>
        <TaskbarItemInfo>
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo
                        x:Name="RecordThumbInfo"
                        Command="{Binding RecordCommand}"
                        CommandTarget="{Binding ElementName=RecordButton}"
                        Description="{DynamicResource S.Recorder.Record}"
                        DismissWhenClicked="True"
                        Visibility="{Binding ElementName=RecordButton, Path=Visibility, Mode=OneWay}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage Drawing="{Binding Source={StaticResource Vector.Record}, Path=Drawing, Mode=OneTime}" />
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo
                        x:Name="SnapThumbInfo"
                        Command="{Binding SnapCommand}"
                        CommandTarget="{Binding ElementName=SnapButton}"
                        Description="{DynamicResource S.Recorder.Snap}"
                        DismissWhenClicked="True"
                        Visibility="{Binding ElementName=SnapButton, Path=Visibility, Mode=OneWay}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage Drawing="{Binding Source={StaticResource Vector.Camera.Add}, Path=Drawing, Mode=OneTime}" />
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo
                        x:Name="PauseThumbInfo"
                        Command="{Binding PauseCommand}"
                        CommandTarget="{Binding ElementName=PauseButton}"
                        Description="{DynamicResource S.Recorder.Pause}"
                        DismissWhenClicked="True"
                        Visibility="{Binding ElementName=PauseButton, Path=Visibility, Mode=OneWay}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage Drawing="{Binding Source={StaticResource Vector.Pause}, Path=Drawing, Mode=OneTime}" />
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo
                        x:Name="StopLargeThumbInfo"
                        Command="{Binding StopLargeCommand}"
                        CommandTarget="{Binding ElementName=StopLargeButton}"
                        Description="{DynamicResource S.Recorder.Stop}"
                        DismissWhenClicked="True"
                        Visibility="{Binding ElementName=StopLargeButton, Path=Visibility, Mode=OneWay}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage Drawing="{Binding Source={StaticResource Vector.Stop}, Path=Drawing, Mode=OneTime}" />
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo
                        x:Name="StopThumbInfo"
                        Command="{Binding StopCommand}"
                        CommandTarget="{Binding ElementName=StopSmallButton}"
                        Description="{DynamicResource S.Recorder.Stop}"
                        DismissWhenClicked="True"
                        Visibility="{Binding ElementName=StopSmallButton, Path=Visibility, Mode=OneWay}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage Drawing="{Binding Source={StaticResource Vector.Stop}, Path=Drawing, Mode=OneTime}" />
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo Visibility="Hidden" />

                    <ThumbButtonInfo
                        x:Name="DiscardThumbInfo"
                        Command="{Binding DiscardCommand}"
                        CommandTarget="{Binding ElementName=DiscardButton}"
                        Description="{DynamicResource S.Recorder.Discard}"
                        DismissWhenClicked="True">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage Drawing="{Binding Source={StaticResource Vector.Remove}, Path=Drawing, Mode=OneTime}" />
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </n:RecorderWindow.TaskbarItemInfo>

    <Border
        Background="{DynamicResource Panel.Background}"
        BorderBrush="{DynamicResource Element.Border.Weak}"
        BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Resources>
                <c:CommandToKeyGesture x:Key="CommandToKeyGesture" />
                <c:KeyGestureToString x:Key="KeyGestureToString" />
                <c:BoolOrToVisibility x:Key="BoolOrToVisibility" />
                <c:BoolAndToVisibility x:Key="BoolAndToVisibility" />
                <c:BoolOr x:Key="BoolOr" />
                <c:IntToBool x:Key="IntToBool" />
            </Grid.Resources>

            <Grid
                x:Name="HeaderGrid"
                Grid.Row="0"
                Background="{DynamicResource Panel.Background}"
                MouseLeftButtonDown="HeaderGrid_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    Margin="5,0,3,0"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Foreground="{DynamicResource Element.Foreground.Header}"
                    Text="{Binding ElementName=RecorderWindow, Path=Title, FallbackValue=Text_Grab}" />

                <!--<TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="5">
                    <Run Text="{Binding ElementName=RecorderWindow, Path=Left, StringFormat={}{0}}"/>
                    <Run Text="x"/>
                    <Run Text="{Binding ElementName=RecorderWindow, Path=Top, StringFormat={}{0}}"/>
                </TextBlock>-->

                <TextBlock
                    Grid.Column="1"
                    Margin="5"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource Element.Foreground.Gray112}"
                    Text="{DynamicResource S.Recorder.ClickOrPress}"
                    TextAlignment="Center">
                    <TextBlock.Visibility>
                        <MultiBinding Converter="{StaticResource BoolAndToVisibility}">
                            <Binding
                                Converter="{StaticResource EnumToBool}"
                                ConverterParameter="{x:Static u:CaptureFrequency.Interaction}"
                                Path="CaptureFrequency"
                                Source="{x:Static u:UserSettings.All}" />
                            <Binding
                                Converter="{StaticResource IntToBool}"
                                ConverterParameter="0"
                                ElementName="RecorderWindow"
                                Path="FrameCount" />
                        </MultiBinding>
                    </TextBlock.Visibility>
                </TextBlock>

                <n:DisplayTimer
                    x:Name="DisplayTimer"
                    Grid.Column="2"
                    Margin="5"
                    Padding="5,0"
                    CapturedCount="{Binding ElementName=RecorderWindow, Path=FrameCount}"
                    CornerRadius="3" />

                <Grid
                    Grid.Column="3"
                    Width="16"
                    Margin="3,5"
                    Background="{StaticResource Vector.Cursor}"
                    ToolTip="{DynamicResource S.Recorder.CursorFollowing}"
                    Visibility="{Binding ElementName=RecorderWindow, Path=IsFollowing, Converter={StaticResource Bool2Visibility}}" />

                <n:ExtendedButton
                    x:Name="MinimizeButton"
                    Grid.Column="4"
                    Width="30"
                    Padding="6"
                    Click="MinimizeButton_Click"
                    ContentHeight="14"
                    ContentWidth="14"
                    Icon="{DynamicResource Vector.Minimize}"
                    Style="{StaticResource Style.Button.NoText}"
                    TabIndex="9"
                    UseLayoutRounding="True" />
                <n:ExtendedButton
                    x:Name="CloseButton"
                    Grid.Column="5"
                    Width="30"
                    Padding="6"
                    Command="{Binding CloseCommand}"
                    ContentHeight="14"
                    ContentWidth="14"
                    Icon="{DynamicResource Vector.Close}"
                    Style="{StaticResource Style.Button.NoText}"
                    TabIndex="10"
                    UseLayoutRounding="True" />
            </Grid>


            <Grid
                x:Name="RecordControlsGrid"
                Grid.Row="1"
                Height="64"
                MinWidth="250"
                Visibility="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderCompactMode, Converter={StaticResource InvertedBoolToVisibility}, FallbackValue={x:Static Visibility.Visible}}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Options  -->
                <n:ExtendedButton
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    MinWidth="65"
                    Command="{Binding OptionsCommand}"
                    ContentHeight="24"
                    ContentWidth="24"
                    Icon="{StaticResource Vector.Options}"
                    KeyGesture="{Binding OptionsCommand, Converter={StaticResource CommandToKeyGesture}}"
                    Style="{StaticResource Style.Button.Vertical}"
                    TabIndex="0"
                    Text="{DynamicResource S.StartUp.Options}" />

                <Separator
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Width="1"
                    Margin="3,2" />

                <!--  Framerate  -->
                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    MinWidth="100">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid x:Name="FrequencyGrid" Grid.Row="0">
                        <Grid.Visibility>
                            <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                <Binding
                                    Converter="{StaticResource EnumToBool}"
                                    ConverterParameter="{x:Static u:CaptureFrequency.PerHour}"
                                    Path="CaptureFrequency"
                                    Source="{x:Static u:UserSettings.All}" />
                                <Binding
                                    Converter="{StaticResource EnumToBool}"
                                    ConverterParameter="{x:Static u:CaptureFrequency.PerMinute}"
                                    Path="CaptureFrequency"
                                    Source="{x:Static u:UserSettings.All}" />
                                <Binding
                                    Converter="{StaticResource EnumToBool}"
                                    ConverterParameter="{x:Static u:CaptureFrequency.PerSecond}"
                                    Path="CaptureFrequency"
                                    Source="{x:Static u:UserSettings.All}" />
                            </MultiBinding>
                        </Grid.Visibility>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Viewbox
                            x:Name="FrequencyViewbox"
                            Grid.Row="0"
                            Grid.Column="0"
                            ClipToBounds="True"
                            Focusable="False"
                            Opacity="{DynamicResource Element.Opacity}"
                            Stretch="Uniform"
                            ToolTip="{DynamicResource S.Recorder.Fps.Range}"
                            ToolTipService.HorizontalOffset="-5"
                            ToolTipService.Placement="Bottom">

                            <Grid
                                Margin="-4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FlowDirection="LeftToRight">
                                <n:CircularProgressBar
                                    IsTabStop="False"
                                    Percentage="100"
                                    Radius="24"
                                    SegmentColor="Gray"
                                    StrokeThickness="2" />
                                <n:CircularProgressBar
                                    IsTabStop="False"
                                    Percentage="100"
                                    Radius="10"
                                    SegmentColor="#FFF0F1F1"
                                    StrokeThickness="22" />

                                <n:CircularProgressBar
                                    IsInverted="True"
                                    IsTabStop="False"
                                    Maximum="60"
                                    Minimum="1"
                                    Radius="24"
                                    SegmentColor="#FFE28A73"
                                    StrokeThickness="2"
                                    Value="{Binding ElementName=FrequencyIntegerUpDown, Path=Value, Mode=OneWay}" />
                                <n:CircularProgressBar
                                    IsInverted="True"
                                    IsTabStop="False"
                                    Maximum="60"
                                    Minimum="1"
                                    Radius="10"
                                    SegmentColor="#FFE28A73"
                                    StrokeThickness="22"
                                    Value="{Binding ElementName=FrequencyIntegerUpDown, Path=Value, Mode=OneWay}" />
                            </Grid>
                        </Viewbox>

                        <n:IntegerUpDown
                            x:Name="FrequencyIntegerUpDown"
                            Grid.Row="0"
                            Grid.Column="1"
                            MinWidth="45"
                            Margin="1,3"
                            Maximum="60"
                            Minimum="1"
                            StepValue="1"
                            TabIndex="1"
                            ToolTip="{DynamicResource S.Recorder.Fps}"
                            ToolTipService.HorizontalOffset="-5"
                            ToolTipService.Placement="Bottom"
                            Value="{Binding Source={x:Static u:UserSettings.All}, Path=LatestFps, Mode=TwoWay}" />

                        <TextBlock
                            x:Name="FrequencyTextBlock"
                            Grid.Row="0"
                            Grid.Column="2"
                            Margin="1,0,0,0"
                            Padding="0"
                            VerticalAlignment="Center"
                            FontSize="12"
                            Foreground="{DynamicResource Element.Foreground}"
                            Text="{DynamicResource S.Recorder.Fps.Short}"
                            ToolTip="{Binding ElementName=FrequencyIntegerUpDown, Path=ToolTip}" />
                    </Grid>

                    <TextBlock
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource Element.Foreground.Gray112}"
                        Text="…"
                        TextWrapping="Wrap">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                <Binding
                                    Converter="{StaticResource EnumToBool}"
                                    ConverterParameter="{x:Static u:CaptureFrequency.Manual}"
                                    Path="CaptureFrequency"
                                    Source="{x:Static u:UserSettings.All}" />
                                <Binding
                                    Converter="{StaticResource EnumToBool}"
                                    ConverterParameter="{x:Static u:CaptureFrequency.Interaction}"
                                    Path="CaptureFrequency"
                                    Source="{x:Static u:UserSettings.All}" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>

                    <n:SplitButton
                        Grid.Row="1"
                        Grid.Column="0"
                        Padding="3"
                        Command="{Binding SwitchFrequencyCommand}"
                        CommandParameter="Switch"
                        ContentHeight="20"
                        IsEnabled="{Binding ElementName=FrequencyIntegerUpDown, Path=IsEnabled, Mode=OneWay}"
                        SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=CaptureFrequency, Converter={StaticResource EnumToInt}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource Style.SplitButton.NoBorder}"
                        TabIndex="2"
                        ToolTip="{DynamicResource S.Recorder.SwitchFrequency}"
                        ToolTipService.HorizontalOffset="-5"
                        ToolTipService.Placement="Bottom">

                        <n:ExtendedMenuItem
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Options.Recorder.Frequency}"
                            Icon="{StaticResource Vector.Record}"
                            IsHitTestVisible="False"
                            Tag="I" />

                        <Separator Height="1" Margin="3,2" />

                        <n:ExtendedMenuItem
                            Command="{Binding SwitchFrequencyCommand}"
                            CommandParameter="{x:Static u:CaptureFrequency.Manual}"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Options.Recorder.Frequency.Manual}"
                            Icon="{StaticResource Vector.Camera}"
                            IsCheckable="True"
                            IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.Manual}, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}, UpdateSourceTrigger=PropertyChanged}"
                            Tag="S.Options.Recorder.Frequency.Manual" />

                        <n:ExtendedMenuItem
                            Command="{Binding SwitchFrequencyCommand}"
                            CommandParameter="{x:Static u:CaptureFrequency.Interaction}"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Options.Recorder.Frequency.Interaction}"
                            Icon="{StaticResource Vector.Cursor}"
                            IsCheckable="True"
                            IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.Interaction}, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}, UpdateSourceTrigger=PropertyChanged}"
                            Tag="S.Options.Recorder.Frequency.Interaction" />

                        <n:ExtendedMenuItem
                            Command="{Binding SwitchFrequencyCommand}"
                            CommandParameter="{x:Static u:CaptureFrequency.PerSecond}"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Options.Recorder.Frequency.Second}"
                            Icon="{StaticResource Vector.Delay}"
                            IsCheckable="True"
                            IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.PerSecond}, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}, UpdateSourceTrigger=PropertyChanged}"
                            Tag="S.Options.Recorder.Frequency.Second" />

                        <n:ExtendedMenuItem
                            Command="{Binding SwitchFrequencyCommand}"
                            CommandParameter="{x:Static u:CaptureFrequency.PerMinute}"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Options.Recorder.Frequency.Minute}"
                            Icon="{StaticResource Vector.Delay.Minute}"
                            IsCheckable="True"
                            IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.PerMinute}, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}, UpdateSourceTrigger=PropertyChanged}"
                            Tag="S.Options.Recorder.Frequency.Minute" />

                        <n:ExtendedMenuItem
                            Command="{Binding SwitchFrequencyCommand}"
                            CommandParameter="{x:Static u:CaptureFrequency.PerHour}"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Options.Recorder.Frequency.Hour}"
                            Icon="{StaticResource Vector.Delay.Hour}"
                            IsCheckable="True"
                            IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.PerHour}, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}, UpdateSourceTrigger=PropertyChanged}"
                            Tag="S.Options.Recorder.Frequency.Hour" />
                    </n:SplitButton>
                </Grid>

                <Separator
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="3"
                    Width="1"
                    Margin="3,2" />

                <!--  Region Selection  -->
                <Grid
                    x:Name="RegionGrid"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="4"
                    MinWidth="110">
                    <Grid.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolOr}" ConverterParameter="0">
                            <Binding ElementName="StopLargeButton" Path="IsEnabled" />
                            <Binding ElementName="StopSmallButton" Path="IsEnabled" />
                            <Binding ElementName="PauseButton" Path="IsEnabled" />
                        </MultiBinding>
                    </Grid.IsEnabled>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!--  Area/Window/Screen  -->
                    <Grid x:Name="SizeGrid" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <n:IntegerBox
                            x:Name="WidthIntegerBox"
                            Grid.Column="0"
                            Height="Auto"
                            Margin="1,3"
                            Padding="4,0"
                            HorizontalContentAlignment="Center"
                            Maximum="4096"
                            Minimum="25"
                            MouseWheel="SizeIntegerBox_MouseWheel"
                            PropagateWheelEvent="True"
                            TabIndex="3"
                            ToolTip="{DynamicResource S.Recorder.Width}"
                            ToolTipService.HorizontalOffset="-5"
                            ToolTipService.Placement="Bottom"
                            ValueChanged="SizeIntegerBox_ValueChanged"
                            Offset="2"
                            Value="{Binding RegionWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock
                            Grid.Column="1"
                            Margin="1"
                            Padding="0"
                            VerticalAlignment="Center"
                            FontFamily="Segoe Script"
                            FontSize="16"
                            Foreground="{DynamicResource Element.Foreground}"
                            Text="×" />

                        <n:IntegerBox
                            x:Name="HeightIntegerBox"
                            Grid.Column="2"
                            Height="Auto"
                            Margin="1,3"
                            Padding="4,0"
                            HorizontalContentAlignment="Center"
                            Maximum="4096"
                            Minimum="25"
                            MouseWheel="SizeIntegerBox_MouseWheel"
                            PropagateWheelEvent="True"
                            TabIndex="4"
                            ToolTip="{DynamicResource S.Recorder.Height}"
                            ToolTipService.HorizontalOffset="-5"
                            ToolTipService.Placement="Bottom"
                            ValueChanged="SizeIntegerBox_ValueChanged"
                            Offset="2"
                            Value="{Binding RegionHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock
                            Grid.Column="3"
                            Margin="1,0,0,0"
                            Padding="0"
                            VerticalAlignment="Center"
                            FontSize="12"
                            Foreground="{DynamicResource Element.Foreground}"
                            Text="px" />
                    </Grid>

                    <TextBlock
                        x:Name="SizeTextBlock"
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource Element.Foreground.Gray112}"
                        Text="..."
                        TextWrapping="Wrap" />

                    <n:SplitButton
                        Grid.Row="1"
                        Padding="3"
                        ContentHeight="20"
                        Foreground="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderForeground, Mode=TwoWay, Converter={StaticResource ColorToBrush}}"
                        SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderModeIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource Style.SplitButton.NoBorder}"
                        TabIndex="5">
                        <n:ExtendedMenuItem
                            Click="RegionButton_Click"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Recorder.Area.Select}"
                            Icon="{StaticResource Vector.Crop}"
                            Tag="S.Recorder.Area" />
                        <n:ExtendedMenuItem
                            Click="WindowButton_Click"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Recorder.Window.Select}"
                            Icon="{StaticResource Vector.Application}"
                            Tag="S.Recorder.Window" />
                        <n:ExtendedMenuItem
                            Click="FullScreenButton_Click"
                            ContentHeight="16"
                            ContentWidth="16"
                            Header="{DynamicResource S.Recorder.Screen.Select}"
                            Icon="{StaticResource Vector.Monitor}"
                            Tag="S.Recorder.Screen" />
                    </n:SplitButton>
                </Grid>

                <Separator
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="5"
                    Width="1"
                    Margin="3,2" />

                <!--  Snap  -->
                <n:ExtendedButton
                    x:Name="SnapButton"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="6"
                    MinWidth="65"
                    Command="{Binding SnapCommand}"
                    ContentHeight="24"
                    ContentWidth="24"
                    Icon="{StaticResource Vector.Camera.Add}"
                    KeyGesture="{Binding RecordKeyGesture, Converter={StaticResource KeyGestureToString}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource Style.Button.Vertical}"
                    TabIndex="6"
                    Text="{DynamicResource S.Recorder.Snap}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />

                <!--  Record  -->
                <n:ExtendedButton
                    x:Name="RecordButton"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="6"
                    MinWidth="65"
                    Command="{Binding RecordCommand}"
                    ContentHeight="24"
                    ContentWidth="24"
                    Icon="{StaticResource Vector.Record}"
                    KeyGesture="{Binding RecordKeyGesture, Converter={StaticResource KeyGestureToString}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource Style.Button.Vertical}"
                    TabIndex="6"
                    Text="{DynamicResource S.Recorder.Record}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />

                <!--  Pause  -->
                <n:ExtendedButton
                    x:Name="PauseButton"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="6"
                    MinWidth="65"
                    Command="{Binding PauseCommand}"
                    ContentHeight="24"
                    ContentWidth="24"
                    Icon="{StaticResource Vector.Pause}"
                    KeyGesture="{Binding RecordKeyGesture, Converter={StaticResource KeyGestureToString}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource Style.Button.Vertical}"
                    TabIndex="6"
                    Text="{DynamicResource S.Recorder.Pause}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />

                <!--  Discard  -->
                <n:ExtendedButton
                    x:Name="DiscardButton"
                    Grid.Row="0"
                    Grid.Column="7"
                    MinWidth="65"
                    Command="{Binding DiscardCommand}"
                    ContentHeight="16"
                    ContentWidth="16"
                    Icon="{StaticResource Vector.Remove}"
                    KeyGesture="{Binding DiscardKeyGesture, Converter={StaticResource KeyGestureToString}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource Style.Button.Horizontal}"
                    TabIndex="7"
                    Text="{DynamicResource S.Recorder.Discard}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}, FallbackValue={x:Static Visibility.Collapsed}}" />

                <!--  Stop (when recording)  -->
                <n:ExtendedButton
                    x:Name="StopLargeButton"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="7"
                    MinWidth="65"
                    Command="{Binding StopLargeCommand}"
                    ContentHeight="24"
                    ContentWidth="24"
                    Icon="{StaticResource Vector.Stop}"
                    KeyGesture="{Binding StopKeyGesture, Converter={StaticResource KeyGestureToString}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource Style.Button.Vertical}"
                    TabIndex="8"
                    Text="{DynamicResource S.Recorder.Stop}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}, FallbackValue={x:Static Visibility.Collapsed}}" />

                <!--  Stop (when paused/manual capture)  -->
                <n:ExtendedButton
                    x:Name="StopSmallButton"
                    Grid.Row="1"
                    Grid.Column="7"
                    MinWidth="65"
                    Command="{Binding StopCommand}"
                    ContentHeight="16"
                    ContentWidth="16"
                    Icon="{StaticResource Vector.Stop}"
                    KeyGesture="{Binding StopKeyGesture, Converter={StaticResource KeyGestureToString}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource Style.Button.Horizontal}"
                    TabIndex="8"
                    Text="{DynamicResource S.Recorder.Stop}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}, FallbackValue={x:Static Visibility.Collapsed}}" />
            </Grid>

            <Grid
                Grid.Row="1"
                Height="32"
                MinWidth="100"
                IsEnabled="{Binding ElementName=RecordControlsGrid, Path=IsEnabled, Mode=OneWay}"
                Visibility="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderCompactMode, Converter={StaticResource Bool2Visibility}, FallbackValue={x:Static Visibility.Collapsed}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" MaxWidth="26" />
                    <ColumnDefinition Width="Auto" MaxWidth="32" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MaxWidth="50" />
                    <ColumnDefinition Width="Auto" MaxWidth="26" />
                    <ColumnDefinition Width="Auto" MaxWidth="26" />
                    <ColumnDefinition Width="Auto" MaxWidth="26" />
                </Grid.ColumnDefinitions>

                <n:ExtendedButton
                    x:Name="OptionsButton"
                    Grid.Column="1"
                    Margin="0"
                    Padding="3"
                    Command="{Binding OptionsCommand}"
                    ContentHeight="22"
                    ContentWidth="22"
                    Icon="{DynamicResource Vector.Options}"
                    Style="{DynamicResource Style.Button.NoText}"
                    TabIndex="0"
                    ToolTip="{DynamicResource S.StartUp.Options}"
                    ToolTipService.HorizontalOffset="-5"
                    ToolTipService.Placement="Bottom" />

                <Viewbox
                    Grid.Column="2"
                    ClipToBounds="True"
                    Focusable="False"
                    Opacity="{DynamicResource Element.Opacity}"
                    Stretch="UniformToFill"
                    ToolTip="{Binding ElementName=FrequencyViewbox, Path=ToolTip, Mode=OneWay}"
                    ToolTipService.HorizontalOffset="-5"
                    ToolTipService.Placement="Bottom"
                    Visibility="{Binding ElementName=FrequencyGrid, Path=Visibility, Mode=OneWay, FallbackValue={x:Static Visibility.Visible}}">

                    <Grid
                        Margin="-4"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FlowDirection="LeftToRight">
                        <n:CircularProgressBar
                            IsTabStop="False"
                            Percentage="100"
                            Radius="24"
                            SegmentColor="Gray"
                            StrokeThickness="2" />
                        <n:CircularProgressBar
                            IsTabStop="False"
                            Percentage="100"
                            Radius="10"
                            SegmentColor="#FFF0F1F1"
                            StrokeThickness="22" />

                        <n:CircularProgressBar
                            IsInverted="True"
                            IsTabStop="False"
                            Maximum="60"
                            Minimum="1"
                            Radius="24"
                            SegmentColor="#FFE28A73"
                            StrokeThickness="2"
                            Value="{Binding ElementName=FrequencyIntegerUpDown, Path=Value, Mode=OneWay}" />
                        <n:CircularProgressBar
                            IsInverted="True"
                            IsTabStop="False"
                            Maximum="60"
                            Minimum="1"
                            Radius="10"
                            SegmentColor="#FFE28A73"
                            StrokeThickness="22"
                            Value="{Binding ElementName=FrequencyIntegerUpDown, Path=Value, Mode=OneWay}" />
                    </Grid>
                </Viewbox>

                <n:IntegerUpDown
                    Grid.Column="3"
                    MinWidth="45"
                    Margin="1,3"
                    IsEnabled="{Binding ElementName=FrequencyIntegerUpDown, Path=IsEnabled, Mode=OneWay}"
                    Maximum="60"
                    Minimum="1"
                    StepValue="1"
                    TabIndex="1"
                    ToolTip="{Binding ElementName=FrequencyIntegerUpDown, Path=ToolTip, Mode=OneWay}"
                    ToolTipService.HorizontalOffset="-5"
                    ToolTipService.Placement="Bottom"
                    Visibility="{Binding ElementName=FrequencyGrid, Path=Visibility, Mode=OneWay}"
                    Value="{Binding Source={x:Static u:UserSettings.All}, Path=LatestFps, Mode=TwoWay}" />

                <n:ExtendedButton
                    Grid.Column="4"
                    Margin="1,0,0,0"
                    Padding="0"
                    VerticalContentAlignment="Center"
                    Command="{Binding SwitchFrequencyCommand}"
                    CommandParameter="Switch"
                    FontSize="12"
                    Style="{StaticResource Style.Button.Horizontal.NoImage}"
                    TabIndex="3"
                    Text="{Binding ElementName=FrequencyTextBlock, Path=Text, Mode=OneWay}"
                    TextWrapping="NoWrap"
                    ToolTip="{DynamicResource S.Recorder.SwitchFrequency}"
                    ToolTipService.HorizontalOffset="-5"
                    ToolTipService.Placement="Bottom"
                    UseLayoutRounding="True">
                    <n:ExtendedButton.ContextMenu>
                        <ContextMenu IsOpen="False">
                            <n:ExtendedMenuItem
                                ContentHeight="16"
                                ContentWidth="16"
                                Header="{DynamicResource S.Options.Recorder.Frequency}"
                                Icon="{StaticResource Vector.Record}"
                                IsHitTestVisible="False" />
                            <Separator />

                            <n:ExtendedMenuItem
                                Command="{Binding SwitchFrequencyCommand}"
                                CommandParameter="{x:Static u:CaptureFrequency.Manual}"
                                ContentHeight="16"
                                ContentWidth="16"
                                Header="{DynamicResource S.Options.Recorder.Frequency.Manual}"
                                Icon="{StaticResource Vector.Camera}"
                                IsCheckable="True"
                                IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.Manual}}"
                                IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}}" />

                            <n:ExtendedMenuItem
                                Command="{Binding SwitchFrequencyCommand}"
                                CommandParameter="{x:Static u:CaptureFrequency.Interaction}"
                                ContentHeight="16"
                                ContentWidth="16"
                                Header="{DynamicResource S.Options.Recorder.Frequency.Interaction}"
                                Icon="{StaticResource Vector.Cursor}"
                                IsCheckable="True"
                                IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.Interaction}}"
                                IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}, UpdateSourceTrigger=PropertyChanged}" />

                            <n:ExtendedMenuItem
                                Command="{Binding SwitchFrequencyCommand}"
                                CommandParameter="{x:Static u:CaptureFrequency.PerSecond}"
                                ContentHeight="16"
                                ContentWidth="16"
                                Header="{DynamicResource S.Options.Recorder.Frequency.Second}"
                                Icon="{StaticResource Vector.Delay}"
                                IsCheckable="True"
                                IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.PerSecond}}"
                                IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}}" />

                            <n:ExtendedMenuItem
                                Command="{Binding SwitchFrequencyCommand}"
                                CommandParameter="{x:Static u:CaptureFrequency.PerMinute}"
                                ContentHeight="16"
                                ContentWidth="16"
                                Header="{DynamicResource S.Options.Recorder.Frequency.Minute}"
                                Icon="{StaticResource Vector.Delay.Minute}"
                                IsCheckable="True"
                                IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.PerMinute}}"
                                IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}}" />

                            <n:ExtendedMenuItem
                                Command="{Binding SwitchFrequencyCommand}"
                                CommandParameter="{x:Static u:CaptureFrequency.PerHour}"
                                ContentHeight="16"
                                ContentWidth="16"
                                Header="{DynamicResource S.Options.Recorder.Frequency.Hour}"
                                Icon="{StaticResource Vector.Delay.Hour}"
                                IsCheckable="True"
                                IsChecked="{Binding CaptureFrequency, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CaptureFrequency.PerHour}}"
                                IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource InvertedBool}}" />
                        </ContextMenu>
                    </n:ExtendedButton.ContextMenu>
                </n:ExtendedButton>

                <Separator
                    Grid.Column="5"
                    Width="1"
                    Margin="5,2"
                    HorizontalAlignment="Left" />

                <n:SplitButton
                    x:Name="ReselectSplitButton"
                    Grid.Column="6"
                    Padding="3"
                    ContentHeight="20"
                    Foreground="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderForeground, Mode=TwoWay, Converter={StaticResource ColorToBrush}}"
                    SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderModeIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource Style.SplitButton.NoBorder.NoText}"
                    TabIndex="4"
                    Visibility="{Binding ElementName=RegionGrid, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}">
                    <n:ExtendedMenuItem
                        Click="RegionButton_Click"
                        ContentHeight="16"
                        ContentWidth="16"
                        Header="{DynamicResource S.Recorder.Area}"
                        Icon="{StaticResource Vector.Crop}" />
                    <n:ExtendedMenuItem
                        Click="WindowButton_Click"
                        ContentHeight="16"
                        ContentWidth="16"
                        Header="{DynamicResource S.Recorder.Window}"
                        Icon="{StaticResource Vector.Application}" />
                    <n:ExtendedMenuItem
                        Click="FullScreenButton_Click"
                        ContentHeight="16"
                        ContentWidth="16"
                        Header="{DynamicResource S.Recorder.Screen}"
                        Icon="{StaticResource Vector.Monitor}" />
                </n:SplitButton>

                <!--  Discard  -->
                <n:ExtendedButton
                    Grid.Column="7"
                    Padding="3"
                    Command="{Binding DiscardCommand}"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{DynamicResource Vector.Remove}"
                    KeyGesture="{Binding DiscardCommand, Converter={StaticResource CommandToKeyGesture}}"
                    Style="{StaticResource Style.Button.NoText}"
                    TabIndex="5"
                    ToolTip="{DynamicResource S.Recorder.Discard}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />

                <!--  Snap  -->
                <n:ExtendedButton
                    Grid.Column="8"
                    Padding="3"
                    Command="{Binding SnapCommand}"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{StaticResource Vector.Camera.Add}"
                    KeyGesture="{Binding SnapCommand, Converter={StaticResource CommandToKeyGesture}}"
                    Style="{StaticResource Style.Button.NoText}"
                    TabIndex="6"
                    ToolTip="{DynamicResource S.Recorder.Snap}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />

                <!--  Record  -->
                <n:ExtendedButton
                    Grid.Column="8"
                    Padding="3"
                    Command="{Binding RecordCommand}"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{StaticResource Vector.Record}"
                    KeyGesture="{Binding RecordCommand, Converter={StaticResource CommandToKeyGesture}}"
                    Style="{StaticResource Style.Button.NoText}"
                    TabIndex="6"
                    ToolTip="{DynamicResource S.Recorder.Record}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />

                <!--  Pause  -->
                <n:ExtendedButton
                    Grid.Column="8"
                    Padding="3"
                    Command="{Binding PauseCommand}"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{StaticResource Vector.Pause}"
                    KeyGesture="{Binding PauseCommand, Converter={StaticResource CommandToKeyGesture}}"
                    Style="{StaticResource Style.Button.NoText}"
                    TabIndex="6"
                    ToolTip="{DynamicResource S.Recorder.Pause}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />

                <!--  Stop  -->
                <n:ExtendedButton
                    Grid.Column="9"
                    Padding="3"
                    Command="{Binding StopCommand}"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{DynamicResource Vector.Stop}"
                    KeyGesture="{Binding StopCommand, Converter={StaticResource CommandToKeyGesture}}"
                    Style="{StaticResource Style.Button.NoText}"
                    TabIndex="7"
                    ToolTip="{DynamicResource S.Recorder.Stop}"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource Bool2Visibility}}" />
            </Grid>
        </Grid>
    </Border>
</n:RecorderWindow>